name: try to pages

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: check
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: "./Frontend/package-lock.json"

      - name: setup the pages
        uses: actions/configure-pages@v1

      - name: install dependencies
        working-directory: ./Frontend
        run: |
          npm ci
          echo "Dependencies were successfully installed"

      - name: build the astro
        working-directory: ./Frontend
        run: |
          npm run build
          echo "Build done"
      - name: prepare for deployment
        working-directory: ./Frontend
        run: |
          # Remove symlinks and non-static files
          find dist -type l -delete
          find dist -type f \( -name '*.mjs' -o -name '*.map' -o -name '*.ts' -o -name '*.jsx' -o -name '*.cjs' \) -delete
          find dist -type f -name '.*' ! -name '.nojekyll' -delete

          # Create .nojekyll file for GitHub Pages
          touch dist/.nojekyll

          # Verify directory structure
          echo "Contents of dist directory:"
          ls -lah dist/
          echo "Total size:"
          du -sh dist/
          echo "Deployment preparation complete."

      - name: upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./Frontend/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: deploy to pages
        id: deployment
        uses: actions/deploy-pages@v4
